sudo: false
language: python
python: "3.4"
cache:
    directories:
        - ${HOME}/mysql

env:
    matrix:
        - TOX_ENV=py26
        - TOX_ENV=py27
        - TOX_ENV=py33
        - TOX_ENV=py34
        - TOX_ENV=pypy
        - TOX_ENV=pypy3

matrix:
    include:
        - addons:
             mariadb: 5.5
          env: TOX_ENV=py27
        - addons:
             mariadb: 10.0
          env: TOX_ENV=py33
        - addons:
             mariadb: 10.1
          env: TOX_ENV=py34
        - env:
             - TOX_ENV=py34
             - DB=5.6.26
          addons:
              apt:
                 packages:
                     - libaio-dev
        - env:
             - TOX_ENV=py34
             - DB=5.7.8-rc
          addons:
              apt:
                 packages:
                     - libaio-dev
# http://dev.mysql.com/downloads/mysql/5.7.html
# really only need libaio1 however libaio-dev is whitelisted

before_install:
install:
    - pip install -U tox

before_script:
    - if [ ! -z "${DB}" ]; then
          F=mysql-${DB}-linux-glibc2.5-x86_64;
          mkdir -p ${HOME}/mysql;
          P=${HOME}/mysql/${F} ;
          if [ ! -d "${P}" ]; then
              wget http://cdn.mysql.com/Downloads/MySQL-${DB%.*}/${F}.tar.gz -O - | tar -zxf - --directory=${HOME}/mysql ;
          fi;
          if [ -f "${P}"/my.cnf ]; then
              O="--defaults-file=${P}/my.cnf" ;
          fi;
          if [ -x "${P}"/scripts/mysql_install_db ]; then
              I=${P}/scripts/mysql_install_db ;
              O="--defaults-file=${P}/my.cnf" ;
          else
              I=${P}/bin/mysqld;
              IO=" --initialize " ;
              O="--no-defaults " ;
          fi;
          ${I} ${O} ${IO} --basedir=${P} --datadir=${HOME}/db-"${DB}" --log-error=/tmp/mysql.err;
          PWLINE=$(grep 'A temporary password is generated for root@localhost:' /tmp/mysql.err);
          PASSWD=${PWLINE##* };
          if [ -x ${P}/bin/mysql_ssl_rsa_setup ]; then
              ${P}/bin/mysql_ssl_rsa_setup --datadir=${HOME}/db-"${DB}";
          fi;
          ${P}/bin/mysqld_safe ${O} --ledir=/ --mysqld=${P}/bin/mysqld  --datadir=${HOME}/db-${DB} --socket=/tmp/mysql.sock --port 3307 --innodb-buffer-pool-size=200M  --lc-messages-dir=${P}/share --plugin-dir=${P}/lib/plugin/ --log-error=/tmp/mysql.err &
          sleep 5; cat /tmp/mysql.err;
          if [ ! -z "${PASSWD" ]; then
              mysql -S /tmp/mysql.sock -u root -p"${PASSWD}" -e "SET PASSWORD = PASSWORD('')";
          fi;
          mysql -S /tmp/mysql.sock -u root "create user ${USER}@localhost identified by ''; create user ${USER}@'%' identified by ''; grant all on *.* to  ${USER}@localhost WITH GRANT OPTION;grant all on *.* to  ${USER}@'%' WITH GRANT OPTION;";
          sed -e 's/3306/3307/g' -e 's:/var/run/mysqld/mysqld.sock:/tmp/mysql.sock:g' .travis.databases.json > pymysql/tests/databases.json;
          echo -e '[client]\nsocket = /tmp/mysql.sock\n' > "${HOME}"/.my.cnf ;
      else
          cp .travis.databases.json pymysql/tests/databases.json;
      fi
    - "mysql -e 'create database test_pymysql  DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;'"
    - "mysql -e 'create database test_pymysql2 DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;'"
    - "mysql -e 'select VERSION();'"

script:
    - tox -e $TOX_ENV

after_failure:
    - cat /tmp/mysql.err
